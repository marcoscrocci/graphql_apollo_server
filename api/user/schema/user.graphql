const { gql } = require('apollo-server');

const userSchema = gql `
    scalar DateTime

    type User {
        id: ID,
        nome: String!
        ativo: Boolean!
        email: String
        role: Role!
        createdAt: DateTime
        matriculas: [Matricula]
    }
    
    input UserInput {
        nome: String,
        ativo: Boolean,
        email: String,
        role: RolesType,
        createdAt: DateTime
    }

    type Role {
        id: ID!,
        type: RolesType!
    }

    enum RolesType {
        ESTUDANTE
        DOCENTE
        COORDENACAO
    }

    type Query {
        users(page: Int, limit: Int): [User]
        user(id: ID!): User! 
    }

    type Mutation {
        # addUser(nome: String!, ativo: Boolean!, email: String, role: RolesType!, createdAt: DateTime): User!
        addUser(user: UserInput): updateUserResponse!
        # updateUser(id: ID!, nome: String!, ativo: Boolean!, email: String, role: RolesType!): User!
        updateUser(id: ID!, user: UserInput): updateUserResponse!
        deleteUser(id: ID!): deleteUserResponse!
    }

    interface responseCustom {
        code: Int!
        message: String!
    }

    type updateUserResponse implements responseCustom {
        code: Int!
        message: String!
        user: User
    }
    
    type deleteUserResponse implements responseCustom {
        code: Int!
        message: String!
    }

`

module.exports = userSchema
